#
# This template creates the necessary CodeBuild jobs for PR and Master building.
#
---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  StackResourcePrefix:
    Type: String
    Default: "cloudformation-automation"
  BuildImage:
    Description: The docker path to the ECR Repo where the container can be found. #TODO: IAM / RESOURCE LEVEL PERMS TO ECR IMAGE
    Type: String
  GithubRepoName:
    Description: The name of the repo (As seen on GitHub.com)
    Type: String
  GithubRepoOwner:
    Description: The owner of the repo (As seen on Github.com)
    Type: String
  GitHubToken:
    Type: String
    NoEcho: true
    Description: GitHub repository OAuth token - this is a GitHub Personal Access Token. All Git write actions will appear as though they happened by the user attached to this token.
  AutomationStackName:
    Description: The Stack Name for the automation stack that was created specifically for this Git Repo.
    Type: String

Resources:

  #
  # ROLES
  #
  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
            - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource:
                  - !GetAtt CodeBuildProject.Arn
              - Action:
                  - 's3:*'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
              - Action:
                  - 'iam:PassRole'
                Effect: Allow
                Resource:
                  - !GetAtt CodeBuildServiceRole.Arn

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${StackResourcePrefix}-build'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${StackResourcePrefix}-build:*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${StackResourcePrefix}-build-pr'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${StackResourcePrefix}-build-pr:*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - !Join
                    - ""
                    - - "arn:aws:s3:::"
                      - Fn::ImportValue:
                          !Sub "CloudFormationDeployer:${AutomationStackName}:S3Bucket"
                      - "/*"
                  - Fn::ImportValue:
                      !Sub "CloudFormationDeployer:${AutomationStackName}:S3BucketArn"
                Action:
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:GetObject'
                  - 's3:ListBucket'
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
              - Effect: Allow
                Action:
                  - 'cloudformation:ValidateTemplate'
                Resource: "*"

  #
  # CODE BUILD
  #
  CodeBuildPRBuilder:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${StackResourcePrefix}-build-pr'
      Description: !Sub '${StackResourcePrefix}-pr-build'
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref BuildImage
        EnvironmentVariables:
          - Name: S3_BUCKET_NAME
            Value:
              Fn::ImportValue: !Sub "CloudFormationDeployer:${AutomationStackName}:S3Bucket"
            Type: PLAINTEXT
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: GITHUB
        Auth:
          Type: OAUTH
        BuildSpec: buildspec-pr.yml
        GitCloneDepth: 5
        Location: !Sub "https://github.com/${GithubRepoOwner}/${GithubRepoName}.git"
      Triggers:
        Webhook: true

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${StackResourcePrefix}-build'
      Description: !Sub '${StackResourcePrefix}-pipeline-build'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref BuildImage
        EnvironmentVariables:
          - Name: S3_BUCKET_NAME
            Value:
              Fn::ImportValue: !Sub "CloudFormationDeployer:${AutomationStackName}:S3Bucket"
            Type: PLAINTEXT
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-sync.yml

  EventRule:
    Type: "AWS::Events::Rule"
    Properties:
      EventPattern:
        source:
          - "aws.codebuild"
        detail-type:
          - "CodeBuild Build State Change"
        detail:
          build-status:
            - FAILED
            - IN_PROGRESS
            - STOPPED
            - SUCCEEDED
          project-name:
            - !Ref CodeBuildProject
      State: ENABLED
      Targets:
        - Arn:
            Fn::ImportValue:
              !Sub "CloudFormationDeployer:${AutomationStackName}:BuildStatusSNSArn"
          Id: "sns-notify"

  #
  # CODE PIPELINE
  #
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactsBucket
        Type: S3
      Name: !Sub "${StackResourcePrefix}-pipeline"
      RoleArn: !GetAtt PipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubRepo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GithubRepoOwner
                Repo: !Ref GithubRepoName
                Branch: master
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceZip
